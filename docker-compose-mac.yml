version: "3"

services:
  # nginx - proxies requests to internal services
  # reverse-proxy:
  #   image: nginx:1.17.10
  #   container_name: reverse_proxy
  #   networks:
  #     - backend
  #   depends_on:
  #     - server
  #     - app
  #   volumes:
  #     - ./reverse_proxy/nginx.conf:/etc/nginx/nginx.conf
  #     - ./tls/ssl-bundle.crt:/etc/ssl/certs/ssl-bundle.crt
  #     - ./tls/private.key:/etc/ssl/private/private.key
  #   ports:
  #     - 80:80
  #     - 443:443

  # server - fast api
  server:
    image: vaziman/server:mac
    container_name: server
    # build:
    #   context: ./server/
    ports:
      - 5001:5001
    networks:
      - backend
    volumes:
      - server-storage:/data/server-storage

    environment:
      APP_ENV: prod
      APP_DEBUG: idk
      APP_PORT: 5001
      MONGODB_DATABASE: flaskdb
      MONGODB_USERNAME: mongodbuser
      MONGODB_PASSWORD: your_mongodb_root_password
      MONGODB_HOSTNAME: mongodb://mongodb:27017/
      TRANSLATOR_URL: http://translator:5002/api/v1
      STORAGE_PATH: /data/server-storage
      SECRET: 2c4fc4e6be22853fec33a243a9327e307dc56f0964d2e89e
      ALGORITHM: HS256
      USE_DETECTRON: "True"
      LOG_LEVEL: DEBUG
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - mongodb
      - translator

  # translator - fast api
  translator:
    image: vaziman/translator
    container_name: translator
    platform: linux/amd64
    # build:
    #   context: ./translator/
    ports:
      - 5002:5002
    networks:
      - backend
    deploy:
      restart_policy:
        condition: on-failure

  # angular ui
  app:
    image: vaziman/app
    container_name: app
    # build:
    #   context: ./app
    ports:
      - 8080:80
    restart: on-failure
    networks:
      - backend

  # database
  mongodb:
    image: mongo:4.4.6
    command: mongod --auth
    networks:
      - backend
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodbuser
      MONGO_INITDB_ROOT_PASSWORD: your_mongodb_root_password
      MONGO_INITDB_DATABASE: flaskdb
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null

networks:
  backend:
    driver: bridge

volumes:
  mongodata:
    driver: local
  server-storage:
    driver: local
